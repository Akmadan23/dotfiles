#!/bin/bash

# This script defines just a mode for rofi instead of being a self-contained
# executable that launches rofi by itself. This makes it more flexible than
# running rofi inside this script as now the user can call rofi as one pleases.
# For instance:
#
#   rofi -show powermenu -modi powermenu:./rofi-power-menu
#
# All credits to https://github.com/jluttine/rofi-power-menu

set -e
set -u

# All supported choices
all=(integrated external-monitor external-tv dual-monitor dual-tv)

# By default, show all (i.e., just copy the array)
show=("${all[@]}")

declare -A texts
texts[integrated]="Integrated display"
texts[external-monitor]="External monitor"
texts[external-tv]="External monitor (TV)"
texts[dual-monitor]="Dual monitor"
texts[dual-tv]="Dual monitor (TV)"

declare -A icons
icons[integrated]="\uf109"
icons[external-monitor]="\uf108"
icons[external-tv]="\uf26c"
icons[dual-monitor]="\uf109 +\uf108"
icons[dual-tv]="\uf109 +\uf26c"
icons[cancel]="\u00d7"

declare -A actions
actions[integrated]="xrandr --output eDP1 --mode 1600x900 --output HDMI1 --off"
actions[external-monitor]="xrandr --output HDMI1 --mode 1920x1080 --output eDP1 --off"
actions[external-tv]="xrandr --output eDP1 --off --output HDMI1 --mode 1360x768"
actions[dual-monitor]="xrandr --output eDP1 --mode 1600x900 --pos 0x0 --output HDMI1 --primary --mode 1920x1080 --pos 1600x0"
actions[dual-tv]="xrandr --output eDP1 --primary --mode 1600x900 --pos 0x0 --output HDMI1 --mode 1360x768 --pos 1600x0"

# By default, ask for confirmation for actions that are irreversible
confirmations=()

# By default, no dry run
dryrun=false
showsymbols=true

function run {
    ${actions[$entry]}
}

source rofi-base-menu
