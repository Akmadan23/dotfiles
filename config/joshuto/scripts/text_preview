#!/usr/bin/bash

## This script is a template script for creating textual file previews in Joshuto.
##
## Copy this script to your Joshuto configuration directory and refer to this
## script in `joshuto.toml` in the `[preview]` section like
## ```
## preview_script = "~/.config/joshuto/preview_file.sh"
## ```
## Make sure the file is marked as executable:
## ```sh
## chmod +x ~/.config/joshuto/preview_file.sh
## ```
## Joshuto will call this script for each file when first hovered by the cursor.
## If this script returns with an exit code 0, the stdout of this script will be
## the file's preview text in Joshuto's right panel.
## The preview text will be cached by Joshuto and only renewed on reload.
## ANSI color codes are supported if Joshuto is build with the `syntax_highlight`
## feature.
##
## This script is considered a configuration file and must be updated manually.
## It will be left untouched if you upgrade Joshuto.
##
## Meanings of exit codes:
##
## code | meaning    | action of ranger
## -----+------------+-------------------------------------------
## 0    | success    | Display stdout as preview
## 1    | no preview | Display no preview at all
##
## This script is used only as a provider for textual previews.
## Image previews are independent from this script.
##

IFS=$'\n'

# Security measures:
# * noclobber prevents you from overwriting a file with `>`
# * noglob prevents expansion of wild cards
# * nounset causes bash to fail if an undeclared variable is used (e.g. typos)
# * pipefail causes a pipeline to fail also if a command other than the last one fails
set -o noclobber -o noglob -o nounset -o pipefail

# Enable exiftool large file support
shopt -s expand_aliases
alias exiftool='/usr/bin/vendor_perl/exiftool -fast -api largefilesupport=1'
alias grep='grep --color=never'

FILE_PATH=""
PREVIEW_WIDTH=10
PREVIEW_HEIGHT=10

while [ "$#" -gt 0 ]; do
    case "$1" in
        "--path")
            FILE_PATH="$2"
            ;;
        "--preview-width")
            PREVIEW_WIDTH="$2"
            ;;
        "--preview-height")
            PREVIEW_HEIGHT="$2"
            ;;
    esac
    shift 2
done

FILE_EXTENSION="$(echo "${FILE_PATH##*.}" | tr '[:upper:]' '[:lower:]')"
MIMETYPE="$(file -Lb --mime-type -- "$FILE_PATH")"

if [[ "$MIMETYPE" == "inode/x-empty" ]]; then
    exit 1
fi

case "$FILE_EXTENSION" in
    ## Archive
    a|ace|alz|arc|arj|bz|bz2|cab|cpio|deb|gz|jar|lha|lz|lzh|lzma|lzo|\
    rpm|rz|t7z|tar|tbz|tbz2|tgz|tlz|txz|tZ|tzo|war|xpi|xz|Z|zip)
        atool --list -- "$FILE_PATH" && exit 0
        bsdtar --list --file "$FILE_PATH" && exit 0
        exit 1
        ;;
    rar)
        ## Avoid password prompt by providing empty password
        unrar lt -p- -- "$FILE_PATH" && exit 0
        exit 1
        ;;
    7z)
        ## Avoid password prompt by providing empty password
        7z l -p -- "$FILE_PATH" && exit 0
        exit 1
        ;;

    ## PDF
    # pdf)
    #     ## Preview as text conversion
    #     pdftotext -l 10 -nopgbrk -q -- "$FILE_PATH" - | \
    #         fmt -w "$PREVIEW_WIDTH" && exit 0
    #     mutool draw -F txt -i -- "$FILE_PATH" 1-10 | \
    #         fmt -w "$PREVIEW_WIDTH" && exit 0
    #     exiftool "$FILE_PATH" && exit 0
    #     exit 1
    #     ;;

    ## BitTorrent
    torrent)
        transmission-show -- "$FILE_PATH" && exit 0
        exit 1
        ;;

    ## OpenDocument
    odt | ods | odp)
        ## Preview as text conversion
        odt2txt "$FILE_PATH" && exit 0
        ## Preview as markdown conversion
        pandoc -s -t markdown -- "$FILE_PATH" && exit 0
        exit 1
        ;;

    ## HTML
    htm | html | xhtml)
        ## Preview as text conversion
        w3m -dump "$FILE_PATH" && exit 0
        lynx -dump -- "$FILE_PATH" && exit 0
        elinks -dump "$FILE_PATH" && exit 0
        pandoc -s -t markdown -- "$FILE_PATH" && exit 0
        exit 1
        ;;

    ## JSON
    json | ipynb)
        jq --color-output . "$FILE_PATH" && exit 0
        python -m json.tool -- "$FILE_PATH" && exit 0
        exit 1
        ;;

    pdf)
        exit 0
        ;;
esac

case "$MIMETYPE" in
    ## Text
    text/* | */javascript | */xml)
        # /usr/share/nvim/runtime/macros/less.sh "$FILE_PATH" && exit 0
        # nvim --clean -u /home/azad/init.lua "$FILE_PATH" && \
        # tree-sitter highlight "$FILE_PATH" && exit 0
        # JOSHUTO_PREVIEW=42 nvim "$FILE_PATH"
        # cat "$FILE_PATH" && exit 0

        bat \
            --color=always \
            --paging=never \
            --style=plain \
            --terminal-width="$PREVIEW_WIDTH" \
            "$FILE_PATH" && exit 0
        exit 1
        ;;

    image/*)
        exiftool "$FILE_PATH" \
            | grep -E '^(Image Size|File Type  )' \
            | sed 's/ *:/:/g' \
            | sort
        exit 0
        ;;

    video/*)
        exiftool "$FILE_PATH" \
            | grep -E '^(Image Size|File Type  |Video Frame Rate|Duration  )' \
            | sed -e 's/ *:/:/' -e 's/\.[0-9]*$//' \
            | sort
        exit 0
        ;;

    application/pdf)
        exit 0
        ;;
esac

exiftool "$FILE_PATH"
